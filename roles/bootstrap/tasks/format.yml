---

- name: install the gptfdisk package
  sudo: true
  pacman: name=gptfdisk state=present

- name: clear the partition table on the build disk
  sudo: true
  command: /usr/bin/sgdisk --zap {{ bootstrap_build_disk }}

- name: zero out the beginning of the build disk
  sudo: true
  command: /usr/bin/dd bs=512 count=2048 if=/dev/zero of={{ bootstrap_build_disk }}

- name: erase magic strings from the build disk
  sudo: true
  command: /usr/bin/wipefs --all {{ bootstrap_build_disk }}

- name: create the root partition on the build disk
  sudo: true
  command: /usr/bin/sgdisk --new=1:0:0 {{ bootstrap_build_disk }}

- name: set the build disk to be bootable
  sudo: true
  command: /usr/bin/sgdisk --attributes=1:set:2 {{ bootstrap_build_disk }}

# if you're reformatting the build disk, the kernel can undesirably auto-mount
# it during the previous task due to referencing the old partition table; this
# task makes sure we are able to wipe out all of the existing data
- name: ensure the build disk is unmounted
  sudo: true
  mount: name={{ bootstrap_mount_point }} src={{ bootstrap_root_partition }} state=unmounted
    fstype=ext4 opts={{ bootstrap_mount_options }}

- name: create the root filesystem on the build disk
  sudo: true
  command: /usr/bin/mkfs.ext4 -F -m 0 -q -L root {{ bootstrap_root_partition }}

# an /etc/fstab entry is created so the VM can be rebooted without losing
# changes made to the build disk (i.e. these format.yml tasks will be skipped)
- name: mount the build disk
  sudo: true
  mount: name={{ bootstrap_mount_point }} src={{ bootstrap_root_partition }} state=mounted
    fstype=ext4 opts={{ bootstrap_mount_options }}
